{
    "version": 3,
    "terraform_version": "0.9.6",
    "serial": 32,
    "lineage": "026d26a5-493a-4242-ac00-781a5a69a5e6",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "kubernetes_master_public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "52.80.93.191"
                },
                "kubernetes_workers_public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "52.80.64.13"
                }
            },
            "resources": {
                "aws_iam_instance_profile.master_profile": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.master_role"
                    ],
                    "primary": {
                        "id": "master_profile",
                        "attributes": {
                            "arn": "arn:aws-cn:iam::493490470276:instance-profile/master_profile",
                            "id": "master_profile",
                            "name": "master_profile",
                            "path": "/",
                            "role": "k8s-master",
                            "roles.#": "1",
                            "roles.1327118689": "k8s-master",
                            "unique_id": "AIPAOWOIZP27SU7RUYB66"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_instance_profile.worker_profile": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.worker_role"
                    ],
                    "primary": {
                        "id": "worker_profile",
                        "attributes": {
                            "arn": "arn:aws-cn:iam::493490470276:instance-profile/worker_profile",
                            "id": "worker_profile",
                            "name": "worker_profile",
                            "path": "/",
                            "role": "k8s-worker",
                            "roles.#": "1",
                            "roles.4255196629": "k8s-worker",
                            "unique_id": "AIPAOSVNDBJV674SX3BHU"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.master_role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "k8s-master",
                        "attributes": {
                            "arn": "arn:aws-cn:iam::493490470276:role/k8s-master",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com.cn\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-07-28T09:16:44Z",
                            "id": "k8s-master",
                            "name": "k8s-master",
                            "path": "/",
                            "unique_id": "AROAOALLVCDD276SSLRQK"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.worker_role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "k8s-worker",
                        "attributes": {
                            "arn": "arn:aws-cn:iam::493490470276:role/k8s-worker",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com.cn\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-07-28T09:16:44Z",
                            "id": "k8s-worker",
                            "name": "k8s-worker",
                            "path": "/",
                            "unique_id": "AROAOZUZ6XPSTKK2KQK5A"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy.master_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.master_role"
                    ],
                    "primary": {
                        "id": "k8s-master:master_policy",
                        "attributes": {
                            "id": "k8s-master:master_policy",
                            "name": "master_policy",
                            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n    {\n        \"Action\" : [\"ec2:*\"],\n        \"Effect\": \"Allow\",\n        \"Resource\": [\"*\"]\n    },\n    {\n        \"Action\" : [\"elasticloadbalancing:*\"],\n        \"Effect\": \"Allow\",\n        \"Resource\": [\"*\"]\n    },\n    {\n        \"Action\": \"ecr:*\",\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\"\n    }\n  ]\n}\n",
                            "role": "k8s-master"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy.worker_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.worker_role"
                    ],
                    "primary": {
                        "id": "k8s-worker:worker_policy",
                        "attributes": {
                            "id": "k8s-worker:worker_policy",
                            "name": "worker_policy",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:Describe*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:AttachVolume\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DetachVolume\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n",
                            "role": "k8s-worker"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_instance.etcd": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.master_profile",
                        "aws_security_group.k8s-master",
                        "aws_subnet.kubernetes"
                    ],
                    "primary": {
                        "id": "i-0827b52f7b04feb1e",
                        "attributes": {
                            "ami": "ami-ca5c8da7",
                            "associate_public_ip_address": "true",
                            "availability_zone": "cn-north-1b",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "master_profile",
                            "id": "i-0827b52f7b04feb1e",
                            "instance_state": "running",
                            "instance_type": "m3.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "k8s",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-5fef5675",
                            "primary_network_interface_id": "eni-5fef5675",
                            "private_dns": "ip-10-0-159-63.cn-north-1.compute.internal",
                            "private_ip": "10.0.159.63",
                            "public_dns": "ec2-54-223-224-96.cn-north-1.compute.amazonaws.com.cn",
                            "public_ip": "54.223.224.96",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_size": "25",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-ce2652b9",
                            "tags.%": "1",
                            "tags.Name": "k8s-etcd",
                            "tenancy": "default",
                            "user_data": "2b8110436d8b91cc1a5607bacd56762ebf7ebc4f",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.1649008214": "sg-d7e463b3"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_instance.master": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.master_profile",
                        "aws_instance.etcd",
                        "aws_security_group.k8s-master",
                        "aws_subnet.kubernetes",
                        "data.template_file.master_yaml"
                    ],
                    "primary": {
                        "id": "i-0a0f874019a2adeae",
                        "attributes": {
                            "ami": "ami-ca5c8da7",
                            "associate_public_ip_address": "true",
                            "availability_zone": "cn-north-1b",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "master_profile",
                            "id": "i-0a0f874019a2adeae",
                            "instance_state": "running",
                            "instance_type": "m3.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "k8s",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-43e35a69",
                            "primary_network_interface_id": "eni-43e35a69",
                            "private_dns": "ip-10-0-163-149.cn-north-1.compute.internal",
                            "private_ip": "10.0.163.149",
                            "public_dns": "ec2-52-80-93-191.cn-north-1.compute.amazonaws.com.cn",
                            "public_ip": "52.80.93.191",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_size": "25",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-ce2652b9",
                            "tags.%": "1",
                            "tags.Name": "k8s-master-0",
                            "tenancy": "default",
                            "user_data": "650c2410bf93125d98caf4f32ccb965e3aaf02f9",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.1649008214": "sg-d7e463b3"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_instance.worker": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.worker_profile",
                        "aws_security_group.k8s-worker",
                        "aws_subnet.kubernetes",
                        "data.template_file.worker_yaml"
                    ],
                    "primary": {
                        "id": "i-092290f572fbaac34",
                        "attributes": {
                            "ami": "ami-ca5c8da7",
                            "associate_public_ip_address": "true",
                            "availability_zone": "cn-north-1b",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "worker_profile",
                            "id": "i-092290f572fbaac34",
                            "instance_state": "running",
                            "instance_type": "m3.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "k8s",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-5be45d71",
                            "primary_network_interface_id": "eni-5be45d71",
                            "private_dns": "ip-10-0-64-15.cn-north-1.compute.internal",
                            "private_ip": "10.0.64.15",
                            "public_dns": "ec2-52-80-64-13.cn-north-1.compute.amazonaws.com.cn",
                            "public_ip": "52.80.64.13",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "150",
                            "root_block_device.0.volume_size": "50",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-ce2652b9",
                            "tags.%": "1",
                            "tags.Name": "k8s-worker-0",
                            "tenancy": "default",
                            "user_data": "92e975b485f9f8dea636b60ec38a27ee3914bcbb",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2793159955": "sg-d1ef68b5"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_internet_gateway.gw": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.kubernetes"
                    ],
                    "primary": {
                        "id": "igw-920b60f7",
                        "attributes": {
                            "id": "igw-920b60f7",
                            "tags.%": "0",
                            "vpc_id": "vpc-5a06a53e"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table.kubernetes": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_internet_gateway.gw",
                        "aws_vpc.kubernetes"
                    ],
                    "primary": {
                        "id": "rtb-4969792c",
                        "attributes": {
                            "id": "rtb-4969792c",
                            "propagating_vgws.#": "0",
                            "route.#": "1",
                            "route.3568951018.cidr_block": "0.0.0.0/0",
                            "route.3568951018.egress_only_gateway_id": "",
                            "route.3568951018.gateway_id": "igw-920b60f7",
                            "route.3568951018.instance_id": "",
                            "route.3568951018.ipv6_cidr_block": "",
                            "route.3568951018.nat_gateway_id": "",
                            "route.3568951018.network_interface_id": "",
                            "route.3568951018.vpc_peering_connection_id": "",
                            "tags.%": "0",
                            "vpc_id": "vpc-5a06a53e"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.kubernetes": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.kubernetes",
                        "aws_subnet.kubernetes"
                    ],
                    "primary": {
                        "id": "rtbassoc-a27962c7",
                        "attributes": {
                            "id": "rtbassoc-a27962c7",
                            "route_table_id": "rtb-4969792c",
                            "subnet_id": "subnet-ce2652b9"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.k8s-master": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.kubernetes"
                    ],
                    "primary": {
                        "id": "sg-d7e463b3",
                        "attributes": {
                            "description": "Managed by Terraform",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-d7e463b3",
                            "ingress.#": "1",
                            "ingress.482069346.cidr_blocks.#": "1",
                            "ingress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.482069346.from_port": "0",
                            "ingress.482069346.ipv6_cidr_blocks.#": "0",
                            "ingress.482069346.protocol": "-1",
                            "ingress.482069346.security_groups.#": "0",
                            "ingress.482069346.self": "false",
                            "ingress.482069346.to_port": "0",
                            "name": "k8s-master",
                            "owner_id": "493490470276",
                            "tags.%": "0",
                            "vpc_id": "vpc-5a06a53e"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.k8s-worker": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_security_group.k8s-master",
                        "aws_vpc.kubernetes"
                    ],
                    "primary": {
                        "id": "sg-d1ef68b5",
                        "attributes": {
                            "description": "Managed by Terraform",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-d1ef68b5",
                            "ingress.#": "3",
                            "ingress.1960698028.cidr_blocks.#": "1",
                            "ingress.1960698028.cidr_blocks.0": "10.0.0.0/16",
                            "ingress.1960698028.from_port": "0",
                            "ingress.1960698028.ipv6_cidr_blocks.#": "0",
                            "ingress.1960698028.protocol": "-1",
                            "ingress.1960698028.security_groups.#": "0",
                            "ingress.1960698028.self": "false",
                            "ingress.1960698028.to_port": "0",
                            "ingress.199171803.cidr_blocks.#": "0",
                            "ingress.199171803.from_port": "0",
                            "ingress.199171803.ipv6_cidr_blocks.#": "0",
                            "ingress.199171803.protocol": "-1",
                            "ingress.199171803.security_groups.#": "1",
                            "ingress.199171803.security_groups.1649008214": "sg-d7e463b3",
                            "ingress.199171803.self": "false",
                            "ingress.199171803.to_port": "0",
                            "ingress.482069346.cidr_blocks.#": "1",
                            "ingress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.482069346.from_port": "0",
                            "ingress.482069346.ipv6_cidr_blocks.#": "0",
                            "ingress.482069346.protocol": "-1",
                            "ingress.482069346.security_groups.#": "0",
                            "ingress.482069346.self": "false",
                            "ingress.482069346.to_port": "0",
                            "name": "k8s-worker",
                            "owner_id": "493490470276",
                            "tags.%": "0",
                            "vpc_id": "vpc-5a06a53e"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.kubernetes": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.kubernetes"
                    ],
                    "primary": {
                        "id": "subnet-ce2652b9",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "cn-north-1b",
                            "cidr_block": "10.0.0.0/16",
                            "id": "subnet-ce2652b9",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-5a06a53e"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_vpc.kubernetes": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-5a06a53e",
                        "attributes": {
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "10.0.0.0/16",
                            "default_network_acl_id": "acl-515c4d34",
                            "default_route_table_id": "rtb-876878e2",
                            "default_security_group_id": "sg-0be1666f",
                            "dhcp_options_id": "dopt-22f98147",
                            "enable_dns_hostnames": "true",
                            "enable_dns_support": "true",
                            "id": "vpc-5a06a53e",
                            "instance_tenancy": "default",
                            "main_route_table_id": "rtb-876878e2",
                            "tags.%": "0"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.master_yaml": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_instance.etcd"
                    ],
                    "primary": {
                        "id": "90981d5c807f06e19aab546052158f76ddbbd38e9e868d1411381749726e5fee",
                        "attributes": {
                            "id": "90981d5c807f06e19aab546052158f76ddbbd38e9e868d1411381749726e5fee",
                            "rendered": "#cloud-config\n\nwrite_files:\n  - path: \"/etc/flannel/options.env\"\n    permissions: \"0755\"\n    content: |\n        FLANNELD_IFACE=$private_ipv4\n        FLANNELD_ETCD_ENDPOINTS=https://10.0.159.63:2379\n        FLANNELD_ETCD_CAFILE=/etc/ssl/etcd/ca.pem\n        FLANNELD_ETCD_CERTFILE=/etc/ssl/etcd/client.pem\n        FLANNELD_ETCD_KEYFILE=/etc/ssl/etcd/client-key.pem\n  - path: \"/etc/systemd/system/flanneld.service.d/40-ExecStartPre-symlink.conf\"\n    permissions: \"0755\"\n    content: |\n        [Service]\n        ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env\n  - path: \"/etc/systemd/system/docker.service.d/40-flannel.conf\"\n    permissions: \"0755\"\n    content: |\n        [Unit]\n        Requires=flanneld.service\n        After=flanneld.service\n  - path: \"/etc/systemd/system/kubelet.service\"\n    permissions: \"0755\"\n    content: |\n        [Service]\n        Environment=KUBELET_IMAGE_TAG=v1.6.1_coreos.0\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/run/kubelet-pod.uuid \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --volume dns,kind=host,source=/etc/resolv.conf \\\n          --mount volume=dns,target=/etc/resolv.conf\"\n        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/usr/bin/mkdir -p /var/log/containers\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ssl/ca.pem \\\n          --api-servers=http://127.0.0.1:8080 \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --register-schedulable=false \\\n          --container-runtime=docker \\\n          --allow-privileged=true \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --hostname-override=$private_ipv4 \\\n          --cluster-dns=10.3.0.10 \\\n          --cluster-domain=cluster.local\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\n        Restart=always\n        RestartSec=10\n\n        [Install]\n        WantedBy=multi-user.target\n  - path: \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: kube-apiserver\n          namespace: kube-system\n        spec:\n          hostNetwork: true\n          containers:\n          - name: kube-apiserver\n            image: quay.io/coreos/hyperkube:v1.6.1_coreos.0\n            command:\n            - /hyperkube\n            - apiserver\n            - --bind-address=0.0.0.0\n            - --etcd-servers=https://10.0.159.63:2379\n            - --etcd-cafile=/etc/kubernetes/ssl/ca.pem\n            - --etcd-certfile=/etc/kubernetes/ssl/client.pem\n            - --etcd-keyfile=/etc/kubernetes/ssl/client-key.pem\n            - --kubelet-client-certificate=/etc/kubernetes/ssl/client.pem\n            - --kubelet-client-key=/etc/kubernetes/ssl/client-key.pem\n            - --allow-privileged=true\n            - --service-cluster-ip-range=10.3.0.0/24\n            - --secure-port=443\n            - --advertise-address=$private_ipv4\n            - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota\n            - --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem\n            - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n            - --client-ca-file=/etc/kubernetes/ssl/ca.pem\n            - --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n            - --runtime-config=extensions/v1beta1/networkpolicies=true\n            - --anonymous-auth=false\n            - --storage-backend=etcd2\n            - --storage-media-type=application/json\n            livenessProbe:\n              httpGet:\n                host: 127.0.0.1\n                port: 8080\n                path: /healthz\n              initialDelaySeconds: 15\n              timeoutSeconds: 15\n            ports:\n            - containerPort: 443\n              hostPort: 443\n              name: https\n            - containerPort: 8080\n              hostPort: 8080\n              name: local\n            volumeMounts:\n            - mountPath: /etc/kubernetes/ssl\n              name: ssl-certs-kubernetes\n              readOnly: true\n            - mountPath: /etc/ssl/certs\n              name: ssl-certs-host\n              readOnly: true\n          volumes:\n          - hostPath:\n              path: /etc/kubernetes/ssl\n            name: ssl-certs-kubernetes\n          - hostPath:\n              path: /usr/share/ca-certificates\n            name: ssl-certs-host\n  - path: \"/etc/kubernetes/manifests/kube-proxy.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: kube-proxy\n          namespace: kube-system\n        spec:\n          hostNetwork: true\n          containers:\n          - name: kube-proxy\n            image: quay.io/coreos/hyperkube:v1.6.1_coreos.0\n            command:\n            - /hyperkube\n            - proxy\n            - --master=http://127.0.0.1:8080\n            - --proxy-mode=iptables\n            securityContext:\n              privileged: true\n            volumeMounts:\n            - mountPath: /etc/ssl/certs\n              name: ssl-certs-host\n              readOnly: true\n          volumes:\n          - hostPath:\n              path: /usr/share/ca-certificates\n            name: ssl-certs-host\n  - path: \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: kube-controller-manager\n          namespace: kube-system\n        spec:\n          hostNetwork: true\n          containers:\n          - name: kube-controller-manager\n            image: quay.io/coreos/hyperkube:v1.6.1_coreos.0\n            command:\n            - /hyperkube\n            - controller-manager\n            - --master=http://127.0.0.1:8080\n            - --leader-elect=true\n            - --service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n            - --root-ca-file=/etc/kubernetes/ssl/ca.pem\n            livenessProbe:\n              httpGet:\n                host: 127.0.0.1\n                path: /healthz\n                port: 10252\n              initialDelaySeconds: 15\n              timeoutSeconds: 1\n            volumeMounts:\n            - mountPath: /etc/kubernetes/ssl\n              name: ssl-certs-kubernetes\n              readOnly: true\n            - mountPath: /etc/ssl/certs\n              name: ssl-certs-host\n              readOnly: true\n          volumes:\n          - hostPath:\n              path: /etc/kubernetes/ssl\n            name: ssl-certs-kubernetes\n          - hostPath:\n              path: /usr/share/ca-certificates\n            name: ssl-certs-host\n  - path: \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: kube-scheduler\n          namespace: kube-system\n        spec:\n          hostNetwork: true\n          containers:\n          - name: kube-scheduler\n            image: quay.io/coreos/hyperkube:v1.6.1_coreos.0\n            command:\n            - /hyperkube\n            - scheduler\n            - --master=http://127.0.0.1:8080\n            - --leader-elect=true\n            livenessProbe:\n              httpGet:\n                host: 127.0.0.1\n                path: /healthz\n                port: 10251\n              initialDelaySeconds: 15\n              timeoutSeconds: 15\n",
                            "template": "#cloud-config\n\nwrite_files:\n  - path: \"/etc/flannel/options.env\"\n    permissions: \"0755\"\n    content: |\n        FLANNELD_IFACE=$private_ipv4\n        FLANNELD_ETCD_ENDPOINTS=https://${ETCD_IP}:2379\n        FLANNELD_ETCD_CAFILE=/etc/ssl/etcd/ca.pem\n        FLANNELD_ETCD_CERTFILE=/etc/ssl/etcd/client.pem\n        FLANNELD_ETCD_KEYFILE=/etc/ssl/etcd/client-key.pem\n  - path: \"/etc/systemd/system/flanneld.service.d/40-ExecStartPre-symlink.conf\"\n    permissions: \"0755\"\n    content: |\n        [Service]\n        ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env\n  - path: \"/etc/systemd/system/docker.service.d/40-flannel.conf\"\n    permissions: \"0755\"\n    content: |\n        [Unit]\n        Requires=flanneld.service\n        After=flanneld.service\n  - path: \"/etc/systemd/system/kubelet.service\"\n    permissions: \"0755\"\n    content: |\n        [Service]\n        Environment=KUBELET_IMAGE_TAG=${HYPERKUBE_VERSION}\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/run/kubelet-pod.uuid \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --volume dns,kind=host,source=/etc/resolv.conf \\\n          --mount volume=dns,target=/etc/resolv.conf\"\n        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/usr/bin/mkdir -p /var/log/containers\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ssl/ca.pem \\\n          --api-servers=http://127.0.0.1:8080 \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --register-schedulable=false \\\n          --container-runtime=docker \\\n          --allow-privileged=true \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --hostname-override=$private_ipv4 \\\n          --cluster-dns=${DNS_SERVICE_IP} \\\n          --cluster-domain=cluster.local\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\n        Restart=always\n        RestartSec=10\n\n        [Install]\n        WantedBy=multi-user.target\n  - path: \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: kube-apiserver\n          namespace: kube-system\n        spec:\n          hostNetwork: true\n          containers:\n          - name: kube-apiserver\n            image: ${HYPERKUBE_IMAGE}:${HYPERKUBE_VERSION}\n            command:\n            - /hyperkube\n            - apiserver\n            - --bind-address=0.0.0.0\n            - --etcd-servers=https://${ETCD_IP}:2379\n            - --etcd-cafile=/etc/kubernetes/ssl/ca.pem\n            - --etcd-certfile=/etc/kubernetes/ssl/client.pem\n            - --etcd-keyfile=/etc/kubernetes/ssl/client-key.pem\n            - --kubelet-client-certificate=/etc/kubernetes/ssl/client.pem\n            - --kubelet-client-key=/etc/kubernetes/ssl/client-key.pem\n            - --allow-privileged=true\n            - --service-cluster-ip-range=${SERVICE_IP_RANGE}\n            - --secure-port=443\n            - --advertise-address=$private_ipv4\n            - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota\n            - --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem\n            - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n            - --client-ca-file=/etc/kubernetes/ssl/ca.pem\n            - --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n            - --runtime-config=extensions/v1beta1/networkpolicies=true\n            - --anonymous-auth=false\n            - --storage-backend=etcd2\n            - --storage-media-type=application/json\n            livenessProbe:\n              httpGet:\n                host: 127.0.0.1\n                port: 8080\n                path: /healthz\n              initialDelaySeconds: 15\n              timeoutSeconds: 15\n            ports:\n            - containerPort: 443\n              hostPort: 443\n              name: https\n            - containerPort: 8080\n              hostPort: 8080\n              name: local\n            volumeMounts:\n            - mountPath: /etc/kubernetes/ssl\n              name: ssl-certs-kubernetes\n              readOnly: true\n            - mountPath: /etc/ssl/certs\n              name: ssl-certs-host\n              readOnly: true\n          volumes:\n          - hostPath:\n              path: /etc/kubernetes/ssl\n            name: ssl-certs-kubernetes\n          - hostPath:\n              path: /usr/share/ca-certificates\n            name: ssl-certs-host\n  - path: \"/etc/kubernetes/manifests/kube-proxy.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: kube-proxy\n          namespace: kube-system\n        spec:\n          hostNetwork: true\n          containers:\n          - name: kube-proxy\n            image: ${HYPERKUBE_IMAGE}:${HYPERKUBE_VERSION}\n            command:\n            - /hyperkube\n            - proxy\n            - --master=http://127.0.0.1:8080\n            - --proxy-mode=iptables\n            securityContext:\n              privileged: true\n            volumeMounts:\n            - mountPath: /etc/ssl/certs\n              name: ssl-certs-host\n              readOnly: true\n          volumes:\n          - hostPath:\n              path: /usr/share/ca-certificates\n            name: ssl-certs-host\n  - path: \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: kube-controller-manager\n          namespace: kube-system\n        spec:\n          hostNetwork: true\n          containers:\n          - name: kube-controller-manager\n            image: ${HYPERKUBE_IMAGE}:${HYPERKUBE_VERSION}\n            command:\n            - /hyperkube\n            - controller-manager\n            - --master=http://127.0.0.1:8080\n            - --leader-elect=true\n            - --service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem\n            - --root-ca-file=/etc/kubernetes/ssl/ca.pem\n            livenessProbe:\n              httpGet:\n                host: 127.0.0.1\n                path: /healthz\n                port: 10252\n              initialDelaySeconds: 15\n              timeoutSeconds: 1\n            volumeMounts:\n            - mountPath: /etc/kubernetes/ssl\n              name: ssl-certs-kubernetes\n              readOnly: true\n            - mountPath: /etc/ssl/certs\n              name: ssl-certs-host\n              readOnly: true\n          volumes:\n          - hostPath:\n              path: /etc/kubernetes/ssl\n            name: ssl-certs-kubernetes\n          - hostPath:\n              path: /usr/share/ca-certificates\n            name: ssl-certs-host\n  - path: \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: kube-scheduler\n          namespace: kube-system\n        spec:\n          hostNetwork: true\n          containers:\n          - name: kube-scheduler\n            image: ${HYPERKUBE_IMAGE}:${HYPERKUBE_VERSION}\n            command:\n            - /hyperkube\n            - scheduler\n            - --master=http://127.0.0.1:8080\n            - --leader-elect=true\n            livenessProbe:\n              httpGet:\n                host: 127.0.0.1\n                path: /healthz\n                port: 10251\n              initialDelaySeconds: 15\n              timeoutSeconds: 15\n",
                            "vars.%": "6",
                            "vars.DNS_SERVICE_IP": "10.3.0.10",
                            "vars.ETCD_IP": "10.0.159.63",
                            "vars.HYPERKUBE_IMAGE": "quay.io/coreos/hyperkube",
                            "vars.HYPERKUBE_VERSION": "v1.6.1_coreos.0",
                            "vars.POD_NETWORK": "10.2.0.0/16",
                            "vars.SERVICE_IP_RANGE": "10.3.0.0/24"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.worker_yaml": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_instance.etcd",
                        "aws_instance.master"
                    ],
                    "primary": {
                        "id": "bfe1c3e912474814b5108cc971da9cf3b42bf2eecca16d0ed85e43a6cc0c233b",
                        "attributes": {
                            "id": "bfe1c3e912474814b5108cc971da9cf3b42bf2eecca16d0ed85e43a6cc0c233b",
                            "rendered": "#cloud-config\n\n\nwrite_files:\n  - path: \"/etc/flannel/options.env\"\n    permissions: \"0755\"\n    content: |\n        FLANNELD_IFACE=$private_ipv4\n        FLANNELD_ETCD_ENDPOINTS=https://10.0.159.63:2379\n        FLANNELD_ETCD_CAFILE=/etc/ssl/etcd/ca.pem\n        FLANNELD_ETCD_CERTFILE=/etc/ssl/etcd/worker.pem\n        FLANNELD_ETCD_KEYFILE=/etc/ssl/etcd/worker-key.pem\n  - path: \"/etc/systemd/system/flanneld.service.d/40-ExecStartPre-symlink.conf\"\n    permissions: \"0755\"\n    content: |\n        [Service]\n        ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env\n  - path: \"/etc/systemd/system/docker.service.d/40-flannel.conf\"\n    permissions: \"0755\"\n    content: |\n        [Unit]\n        Requires=flanneld.service\n        After=flanneld.service\n  - path: \"/etc/systemd/system/kubelet.service\"\n    permissions: \"0755\"\n    content: |\n        [Service]\n        Environment=KUBELET_IMAGE_TAG=v1.6.1_coreos.0\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/run/kubelet-pod.uuid \\\n          --volume dns,kind=host,source=/etc/resolv.conf \\\n          --mount volume=dns,target=/etc/resolv.conf \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log\"\n        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/usr/bin/mkdir -p /var/log/containers\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ssl/ca.pem \\\n          --api-servers=https://10.0.163.149 \\\n          --network-plugin-dir=/etc/kubernetes/cni/net.d \\\n          --container-runtime=docker \\\n          --register-node=true \\\n          --allow-privileged=true \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --hostname-override=$private_ipv4 \\\n          --cluster-dns=10.3.0.10 \\\n          --cluster-domain=cluster.local \\\n          --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml \\\n          --tls-cert-file=/etc/kubernetes/ssl/worker.pem \\\n          --tls-private-key-file=/etc/kubernetes/ssl/worker-key.pem\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\n        Restart=always\n        RestartSec=10\n\n        [Install]\n        WantedBy=multi-user.target\n  - path: \"/etc/kubernetes/manifests/kube-proxy.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: kube-proxy\n          namespace: kube-system\n        spec:\n          hostNetwork: true\n          containers:\n          - name: kube-proxy\n            image: quay.io/coreos/hyperkube:v1.6.1_coreos.0\n            command:\n            - /hyperkube\n            - proxy\n            - --master=https://10.0.163.149\n            - --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml\n            - --proxy-mode=iptables\n            securityContext:\n              privileged: true\n            volumeMounts:\n              - mountPath: /etc/ssl/certs\n                name: \"ssl-certs\"\n              - mountPath: /etc/kubernetes/worker-kubeconfig.yaml\n                name: \"kubeconfig\"\n                readOnly: true\n              - mountPath: /etc/kubernetes/ssl\n                name: \"etc-kube-ssl\"\n                readOnly: true\n          volumes:\n            - name: \"ssl-certs\"\n              hostPath:\n                path: \"/usr/share/ca-certificates\"\n            - name: \"kubeconfig\"\n              hostPath:\n                path: \"/etc/kubernetes/worker-kubeconfig.yaml\"\n            - name: \"etc-kube-ssl\"\n              hostPath:\n                path: \"/etc/kubernetes/ssl\"\n  - path: \"/etc/kubernetes/worker-kubeconfig.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Config\n        clusters:\n        - name: local\n          cluster:\n            certificate-authority: /etc/kubernetes/ssl/ca.pem\n        users:\n        - name: kubelet\n          user:\n            client-certificate: /etc/kubernetes/ssl/worker.pem\n            client-key: /etc/kubernetes/ssl/worker-key.pem\n        contexts:\n        - context:\n            cluster: local\n            user: kubelet\n          name: kubelet-context\n        current-context: kubelet-context\n",
                            "template": "#cloud-config\n\n\nwrite_files:\n  - path: \"/etc/flannel/options.env\"\n    permissions: \"0755\"\n    content: |\n        FLANNELD_IFACE=$private_ipv4\n        FLANNELD_ETCD_ENDPOINTS=https://${ETCD_IP}:2379\n        FLANNELD_ETCD_CAFILE=/etc/ssl/etcd/ca.pem\n        FLANNELD_ETCD_CERTFILE=/etc/ssl/etcd/worker.pem\n        FLANNELD_ETCD_KEYFILE=/etc/ssl/etcd/worker-key.pem\n  - path: \"/etc/systemd/system/flanneld.service.d/40-ExecStartPre-symlink.conf\"\n    permissions: \"0755\"\n    content: |\n        [Service]\n        ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env\n  - path: \"/etc/systemd/system/docker.service.d/40-flannel.conf\"\n    permissions: \"0755\"\n    content: |\n        [Unit]\n        Requires=flanneld.service\n        After=flanneld.service\n  - path: \"/etc/systemd/system/kubelet.service\"\n    permissions: \"0755\"\n    content: |\n        [Service]\n        Environment=KUBELET_IMAGE_TAG=${HYPERKUBE_VERSION}\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/run/kubelet-pod.uuid \\\n          --volume dns,kind=host,source=/etc/resolv.conf \\\n          --mount volume=dns,target=/etc/resolv.conf \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log\"\n        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/usr/bin/mkdir -p /var/log/containers\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ssl/ca.pem \\\n          --api-servers=https://${MASTER_HOST} \\\n          --network-plugin-dir=/etc/kubernetes/cni/net.d \\\n          --container-runtime=docker \\\n          --register-node=true \\\n          --allow-privileged=true \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --hostname-override=$private_ipv4 \\\n          --cluster-dns=${DNS_SERVICE_IP} \\\n          --cluster-domain=cluster.local \\\n          --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml \\\n          --tls-cert-file=/etc/kubernetes/ssl/worker.pem \\\n          --tls-private-key-file=/etc/kubernetes/ssl/worker-key.pem\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\n        Restart=always\n        RestartSec=10\n\n        [Install]\n        WantedBy=multi-user.target\n  - path: \"/etc/kubernetes/manifests/kube-proxy.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: kube-proxy\n          namespace: kube-system\n        spec:\n          hostNetwork: true\n          containers:\n          - name: kube-proxy\n            image: ${HYPERKUBE_IMAGE}:${HYPERKUBE_VERSION}\n            command:\n            - /hyperkube\n            - proxy\n            - --master=https://${MASTER_HOST}\n            - --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml\n            - --proxy-mode=iptables\n            securityContext:\n              privileged: true\n            volumeMounts:\n              - mountPath: /etc/ssl/certs\n                name: \"ssl-certs\"\n              - mountPath: /etc/kubernetes/worker-kubeconfig.yaml\n                name: \"kubeconfig\"\n                readOnly: true\n              - mountPath: /etc/kubernetes/ssl\n                name: \"etc-kube-ssl\"\n                readOnly: true\n          volumes:\n            - name: \"ssl-certs\"\n              hostPath:\n                path: \"/usr/share/ca-certificates\"\n            - name: \"kubeconfig\"\n              hostPath:\n                path: \"/etc/kubernetes/worker-kubeconfig.yaml\"\n            - name: \"etc-kube-ssl\"\n              hostPath:\n                path: \"/etc/kubernetes/ssl\"\n  - path: \"/etc/kubernetes/worker-kubeconfig.yaml\"\n    permissions: \"0755\"\n    content: |\n        apiVersion: v1\n        kind: Config\n        clusters:\n        - name: local\n          cluster:\n            certificate-authority: /etc/kubernetes/ssl/ca.pem\n        users:\n        - name: kubelet\n          user:\n            client-certificate: /etc/kubernetes/ssl/worker.pem\n            client-key: /etc/kubernetes/ssl/worker-key.pem\n        contexts:\n        - context:\n            cluster: local\n            user: kubelet\n          name: kubelet-context\n        current-context: kubelet-context\n",
                            "vars.%": "5",
                            "vars.DNS_SERVICE_IP": "10.3.0.10",
                            "vars.ETCD_IP": "10.0.159.63",
                            "vars.HYPERKUBE_IMAGE": "quay.io/coreos/hyperkube",
                            "vars.HYPERKUBE_VERSION": "v1.6.1_coreos.0",
                            "vars.MASTER_HOST": "10.0.163.149"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "null_resource.make_admin_key": {
                    "type": "null_resource",
                    "depends_on": [
                        "aws_instance.worker"
                    ],
                    "primary": {
                        "id": "2176123189399949085",
                        "attributes": {
                            "id": "2176123189399949085"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "null_resource.setup_kubectl": {
                    "type": "null_resource",
                    "depends_on": [
                        "aws_instance.master",
                        "null_resource.make_admin_key"
                    ],
                    "primary": {
                        "id": "2816457861040144335",
                        "attributes": {
                            "id": "2816457861040144335"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        }
    ]
}
